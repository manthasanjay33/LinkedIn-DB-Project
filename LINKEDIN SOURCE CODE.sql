
--------------------------------------------LinkedIn Database Project.-----------------------------------------------------------------------------------------

--CREATE DATABASE LINKEDIN
CREATE DATABASE LINKEDIN;

USE LINKEDIN;

--CREATE TABLE ORGANIZATION
CREATE TABLE ORGANIZATION
(
	ORGANIZATION_ID INT PRIMARY KEY,
	ORGANIZATION_NAME VARCHAR(20),
	ORGANIZATION_DESCRIPTION VARCHAR(20),
	ORGANIZATION_ADRS VARCHAR(20)
);


--CREATE TABLE MEMBERS
CREATE TABLE MEMBERS
(
	MEMBER_ID INT PRIMARY KEY,
	MEMBER_NAME VARCHAR(20),
	EMAIL VARCHAR(20),
	EMAIL_PASSWORD VARCHAR(30),
	GENDER VARCHAR(30),
	MEM_ADDRESS VARCHAR(20),
	DOB DATE,
	DATE_JOINED DATE,
	MARTIAL_STATUS VARCHAR(20),
	ORGANIZATION_ID INT FOREIGN KEY REFERENCES ORGANIZATION(ORGANIZATION_ID)
);

--CREATE TABLE CONNECTIONS
CREATE TABLE CONNECTIONS
(
	CONNECTION_ID INT PRIMARY KEY,
	CONNECTION_MEM_ID INT,
	DATE_CONNECTION_MADE DATETIME,

	MEMBER_ID INT FOREIGN KEY REFERENCES MEMBERS(MEMBER_ID)
);


--CREATE TABLE GROUPS
CREATE TABLE GROUPS
(
	GROUP_ID INT PRIMARY KEY,
	GROUP_NAME VARCHAR(20),
	GROUP_DESCRIPTION VARCHAR(20),
	GROUP_CREATED DATETIME,
	GROUP_LAST_UPDATED DATETIME,
	CREATED_BY_MEMBER_ID INT FOREIGN KEY REFERENCES MEMBERS(MEMBER_ID)
);


--CREATE TABLE MEMBER_PROFILE
CREATE TABLE MEMBER_PROFILE
(
	PROFILE_ID INT PRIMARY KEY,
	SKILLS VARCHAR(30),
	LANGUAGES VARCHAR(30),
	DATE_CREATED DATETIME,
	DATE_LAST_UPDATED DATETIME,
	PROFILE_MEMBER_ID INT FOREIGN KEY REFERENCES MEMBERS(MEMBER_ID)
);

--CREATE TABLE POSTS
CREATE TABLE POSTS
(
	POST_ID INT PRIMARY KEY,
	POST_NAME VARCHAR(50),
	POST_DESC VARCHAR(40),
	DATE_POSTED DATETIME,
	POST_IMAGE VARBINARY(MAX),
	POST_VIDEO VARBINARY(MAX),
	POST_MEMBER_ID INT FOREIGN KEY REFERENCES MEMBERS(MEMBER_ID)
);

--CREATE TABLE MEMBERS_GROUPS
CREATE TABLE MEMBERS_GROUPS
(
	DATE_JOINED DATE,
	DATE_LEFT DATE,
	MEMBER_ID INT FOREIGN KEY REFERENCES MEMBERS(MEMBER_ID),
	GROUP_ID INT FOREIGN KEY REFERENCES GROUPS(GROUP_ID)
);

---------INSERTING VALUES TO TABLES--------------

INSERT INTO ORGANIZATION VALUES(100,'VIRTUSA','IT CONSULTING','HYDERBAD');
INSERT INTO ORGANIZATION VALUES(101,'TCS','PRODUCT SERVICES','PUNE');
INSERT INTO ORGANIZATION VALUES(103,'GOOGLE','INFORMATION','CHENNAI');
INSERT INTO ORGANIZATION VALUES(104,'MINDTREE','SOFTWARE SOLUTIONS','DELHI');
INSERT INTO ORGANIZATION VALUES(105,'DEOLITE','BUSINESS SOLUTIONS','BANGALORE');
INSERT INTO ORGANIZATION VALUES(106,'DEOLITE','BUSINESS SOLUTIONS','BANGALORE');

SELECT * FROM ORGANIZATION;


INSERT INTO MEMBERS VALUES(1111,'MANJUNATH','MANJUNATH@GMAIL.COM','MANJA','MALE','BANGALOE','27-DEC-1997','03-MAY-2021','SINGLE',100);
INSERT INTO MEMBERS VALUES(2222,'ALTHAF','ALTHAF@GMAIL.COM','ALTHAF','MALE','BANGALORE','06-NOV-1997','05-MAY-2019','SINGLE',100);
INSERT INTO MEMBERS VALUES(3333,'RACHANA','RACHANA@GMAIL.COM','RACHANA','FEMALE','MANGALORE','15-DEC-1998','20-NOV-2020','SINGLE',101);
INSERT INTO MEMBERS VALUES(4444,'DEEKSHITHA','DEEKSHITHA@GMAIL.COM','DEEKSHITHA','FEMALE','KADAPA','21-JUL-1999','03-APR-2018','SINGLE',105);
INSERT INTO MEMBERS VALUES(5555,'SANJAY','SANJAY@GMAIL.COM','SANJAY','MALE','HYDERBAD','20-APR-1998','03-MAY-2019','SINGLE',103);
INSERT INTO MEMBERS VALUES(6666,'AISHU','AISHU@GMAIL.COM','AISHU','FEMALE','PUNE','27-DEC-1999','03-MAY-2021','SINGLE',104);
INSERT INTO MEMBERS VALUES(7777,'VISHNU','VISHNU@GMAIL.COM','VISHNU','MALE','PUNE','27-DEC-1999','03-MAY-2021','SINGLE',104);
INSERT INTO MEMBERS VALUES(8888,'ALTHAF','MANJUNATH@GMAIL.COM','MANJA','MALE','BANGALOE','27-DEC-1997','03-MAY-2021','SINGLE',101);

SELECT * FROM MEMBERS;


INSERT INTO CONNECTIONS VALUES(10,2000,'20-MAY-2019 11:44:44:000',1111);
INSERT INTO CONNECTIONS VALUES(11,2001,'20-MAY-2019 11:44:44:000',1111);
INSERT INTO CONNECTIONS VALUES(12,2002,'20-JUL-2016 01:24:24:000',2222);
INSERT INTO CONNECTIONS VALUES(13,2003,'10-NOV-2016 10:44:44:000',2222);
INSERT INTO CONNECTIONS VALUES(14,2004,'10-JAN-2018 08:38:44:000',3333);
INSERT INTO CONNECTIONS VALUES(15,2005,'18-JUN-2014 07:24:04:000',4444);

UPDATE CONNECTIONS SET DATE_CONNECTION_MADE='05-JUN-2014 06:24:24:000';

UPDATE CONNECTIONS SET CONNECTION_MEM_ID=8888 WHERE CONNECTION_ID=11;
UPDATE CONNECTIONS SET CONNECTION_MEM_ID=6666 WHERE CONNECTION_ID=12;
UPDATE CONNECTIONS SET CONNECTION_MEM_ID=5555 WHERE CONNECTION_ID=13;
UPDATE CONNECTIONS SET CONNECTION_MEM_ID=2222 WHERE CONNECTION_ID=14;
UPDATE CONNECTIONS SET CONNECTION_MEM_ID=3333 WHERE CONNECTION_ID=15;
UPDATE CONNECTIONS SET CONNECTION_MEM_ID=2222 WHERE CONNECTION_ID=14;


SELECT * FROM CONNECTIONS;


INSERT INTO GROUPS VALUES(50,'VSPORTS','SPORTS WEAR PRODUCTS','26-JUN-2014 08:24:24:000','28-MAR-2016 03:24:24:000',3333);
INSERT INTO GROUPS VALUES(51,'DOTNET','TRAINEE ENGINEERS','16-AUG-2011 09:24:24:000','18-MAR-2016 01:24:24:000',2222);
INSERT INTO GROUPS VALUES(52,'AVENGERS','ANIMATION','29-JUN-2014 10:24:24:000','18-MAR-2016 07:24:24:000',4444);
INSERT INTO GROUPS VALUES(53,'DCMARVEL','SUPER HEROES','06-JUN-2014 07:24:24:000','28-MAR-2016 03:24:24:000',1111);
INSERT INTO GROUPS VALUES(54,'TRECKING','ADVENTURES','16-MAR-2011 08:24:24:000','28-MAR-2016 03:24:24:000',5555);

SELECT * FROM GROUPS;


INSERT INTO MEMBER_PROFILE VALUES(500,'JAVA & SQL','ENGLISH & KANNADA','19-JAN-2014 07:24:24:000','18-MAR-2016 03:24:24:000',1111);
INSERT INTO MEMBER_PROFILE VALUES(501,'DOT NET& JS','ENGLISH & TELUGU','16-JAN-2013 07:24:24:000','16-MAR-2016 03:24:24:000',2222);
INSERT INTO MEMBER_PROFILE VALUES(502,'UI & SQL','HINDI & KANNADA','09-JAN-2014 07:24:24:000','08-MAR-2016 17:24:24:000',3333);
INSERT INTO MEMBER_PROFILE VALUES(503,'JAVA & SQL','ENGLISH & KANNADA','09-JAN-2014 07:24:24:000','08-MAR-2016 03:24:24:000',4444);
INSERT INTO MEMBER_PROFILE VALUES(504,'PYTHON & MONGODB','TELUGU & KANNADA','19-JAN-2014 07:24:24:000','08-MAR-2016 03:24:24:000',4444);

SELECT * FROM MEMBER_PROFILE;



INSERT INTO  POSTS(POST_ID,POST_NAME,POST_DESC,DATE_POSTED,POST_MEMBER_ID) VALUES(700,'GOOD MORNING','GREETINGS FOR GOOD MORNING','19-JAN-2014 07:24:24:000',1111);
INSERT INTO POSTS(POST_ID,POST_NAME,POST_DESC,DATE_POSTED,POST_MEMBER_ID) VALUES(701,'VACCINATION','STAY HOME STAY SAFE','09-JAN-2014 07:24:24:000',2222);
INSERT INTO POSTS(POST_ID,POST_NAME,POST_DESC,DATE_POSTED,POST_MEMBER_ID) VALUES(702,'PLAY BOLD','STAY FIT','19-JAN-2014 07:24:24:000',1111);
INSERT INTO POSTS(POST_ID,POST_NAME,POST_DESC,DATE_POSTED,POST_MEMBER_ID) VALUES(703,'BREAKFAST','SOUTH MESS','09-JUN-2014 07:24:24:000',3333);
INSERT INTO POSTS(POST_ID,POST_NAME,POST_DESC,DATE_POSTED,POST_MEMBER_ID) VALUES(704,'ACHIEVEMENT','HARDWORK','23-NOV-2011 07:24:24:000',4444);
INSERT INTO POSTS(POST_ID,POST_NAME,POST_DESC,DATE_POSTED,POST_MEMBER_ID) VALUES(705,'WINNING','ONLY GOAL','19-JAN-2014 07:24:24:000',3333);


UPDATE POSTS SET POST_NAME='GOOD MORNING' WHERE POST_ID=702;
UPDATE POSTS SET DATE_POSTED='2012-JAN-09 07:24:24.000' WHERE POST_ID=701;

SELECT * FROM POSTS;


INSERT INTO MEMBERS_GROUPS VALUES('26-APR-2014','20-MAY-2017',1111,50);
INSERT INTO MEMBERS_GROUPS VALUES('26-APR-2014','20-MAY-2017',2222,50);
INSERT INTO MEMBERS_GROUPS VALUES('26-APR-2014','20-MAY-2019',3333,50);
INSERT INTO MEMBERS_GROUPS VALUES('16-AUG-2021','20-MAY-2016',4444,51);
INSERT INTO MEMBERS_GROUPS VALUES('29-JUN-2014','20-MAY-2016',5555,52);
INSERT INTO MEMBERS_GROUPS VALUES('29-JUN-2014','20-MAY-2016',6666,52);
INSERT INTO MEMBERS_GROUPS VALUES('06-JUN-2014','20-MAY-2010',7777,53);

SELECT * FROM MEMBERS_GROUPS;

SELECT * FROM MEMBERS_GROUPS;
SELECT * FROM ORGANIZATION;
SELECT * FROM MEMBERS;
SELECT * FROM MEMBER_PROFILE;
SELECT * FROM CONNECTIONS;
SELECT * FROM GROUPS;
SELECT * FROM POSTS;


--------------------------------------QUERIES STARTS HERE.------------------------------------------------------------------------------------------


--QUERY 1. WAQ TO DISPALY ORGANIZATION_ID,ORGANIZATION_DESCRIPTION,MEMBER_ID,MEMBER_NAME,EMAIL 
--FROM ORGANIZATION & MEMBERS TABLES USING INNER JOIN.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_DESCRIPTION,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O INNER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID;


--QUERY 2. WAQ TO DISPALY ORGANIZATION_ID,ORGANIZATION_DESCRIPTION,MEMBER_ID,MEMBER_NAME,EMAIL 
--FROM ORGANIZATION & MEMBERS TABLES USING LEFT OUTER JOIN.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_DESCRIPTION,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O LEFT OUTER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID;


--QUERY 3. WAQ TO DISPALY ORGANIZATION_ID,ORGANIZATION_DESCRIPTION,MEMBER_ID,MEMBER_NAME,EMAIL 
--FROM ORGANIZATION & MEMBERS TABLES USING RIGHT OUTER JOIN.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_DESCRIPTION,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O RIGHT OUTER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID;


---QUERY 4. WAQ TO DISPALY ORGANIZATION_ID,ORGANIZATION_DESCRIPTION,MEMBER_ID,MEMBER_NAME,EMAIL 
--FROM ORGANIZATION & MEMBERS TABLES USING FULL OUTER JOIN.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_DESCRIPTION,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O FULL OUTER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID;


--QUERY 5. WAQ TO DISPALY EMPLOYEE DETAILS WHO ARE WORKING FOR ORGANIZATION 100,104 AND 105.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_NAME,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O INNER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID
AND O.ORGANIZATION_ID IN(100,104,105);


--QUERY 6. WAQ TO DISPALY ORGANIZATION_ID,ORGANIZATION_NAME,MEMBER_ID,MEMBER_NAME WHO ARE MARRIED.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_NAME,M.MEMBER_ID,M.MEMBER_NAME,M.GENDER,M.DOB,M.MARTIAL_STATUS
FROM ORGANIZATION O INNER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID
AND M.MARTIAL_STATUS='MARRIED';


--QUERY 7. WAQ TO DISPALY ORGANIZATION_ID,ORGANIZATION_NAME,MEMBER_ID,MEMBER_NAME, GENDER, DOB WHO ARE NOT 
--MARRIED AND GENDER=MALE

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_NAME,M.MEMBER_ID,M.MEMBER_NAME,M.GENDER,M.DOB,M.MARTIAL_STATUS
FROM ORGANIZATION O INNER JOIN MEMBERS M ON O.ORGANIZATION_ID=M.ORGANIZATION_ID
AND M.MARTIAL_STATUS='SINGLE' AND GENDER='MALE';


--QUERY 8. WAQ TO DISPLAY THE DETAILS OF MEMBER USING GROUP BY CLAUSE AND MEMBER_ID’S IN ASCENDING ODER.

SELECT COUNT(MEMBER_ID) AS MEMBER_ID,MEMBER_NAME,MEM_ADDRESS FROM MEMBERS
GROUP BY MEM_ADDRESS,MEMBER_NAME ORDER BY COUNT(MEMBER_ID) ASC;


--QUERY 9. WRITE A QUERY TO FETCH THE COUNT OF MEMBERS WHO ARE WORKING IN EACH LOCATION USING ORDER BY.

SELECT COUNT(MEMBER_ID) CNT,MEM_ADDRESS FROM MEMBERS
GROUP BY MEM_ADDRESS
ORDER BY COUNT(MEMBER_ID) DESC;


--QUERY 10. WRITE A QUERY TO FETCH THE MEMBER ADDRESS AND MEMBER NAME WHO ARE WORKING FOR SAME LOCATION IN 						  
--DESCENDING ORDER.

SELECT COUNT(MEMBER_ID) CNT,MEM_ADDRESS,MEMBER_NAME FROM MEMBERS
GROUP BY MEM_ADDRESS,MEMBER_NAME
ORDER BY COUNT(MEMBER_ID),MEM_ADDRESS DESC;


--QUERY 11. WRITE A QUERY TO ACCESS THE GROUP_ID,MEMBER_ID, MEMBER_NAME AND GROUP_NAME TO WHICH MEMBER BELONGS TO 			  
--WHICH GROUP USING FILTER CONDITION.

SELECT M.MEMBER_ID,G.GROUP_ID,M.MEMBER_NAME,G.GROUP_NAME
FROM MEMBERS M,GROUPS G 
WHERE M.MEMBER_ID=G.CREATED_BY_MEMBER_ID;



--QUERY 12. WRITE A QUERY TO ACCESS THE MEMBER_ID, MEMBER_NAME AND MEMBER_ADDRESS WHO ARE BORNED BETWEEN JAN 1999 			  
--TO DEC 1999 USING BETWEEN OPERATOR.


SELECT MEMBER_ID,MEMBER_NAME,MEM_ADDRESS
FROM MEMBERS WHERE DOB BETWEEN '01-JAN-1999' AND '30-DEC-1999';


--QUERY 13. WRITE A QUERY TO ACCESS THE OGRANIZATION_ID, OGRANIZATION_DESCRIPTION, MEMBER_ID, MEMBER_NAME WHO’S 				  
--NAME STARTS WITH LETTER ‘A’ USING LIKE OPERATOR.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_DESCRIPTION,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O INNER JOIN MEMBERS M ON MEMBER_NAME LIKE ('A%') AND O.ORGANIZATION_ID=M.ORGANIZATION_ID 


--QUERY 14. WRITE A QUERY TO ACCESS THE OGRANIZATION_ID, OGRANIZATION_DESCRIPTION, MEMBER_ID, MEMBER_NAME WHO’S 				 
--NAME HAVING 5TH LETTER ‘A’ USING LIKE OPERATOR.

SELECT O.ORGANIZATION_ID,O.ORGANIZATION_DESCRIPTION,M.MEMBER_ID,M.MEMBER_NAME,M.EMAIL 
FROM ORGANIZATION O INNER JOIN MEMBERS M ON MEMBER_NAME LIKE ('____A%') AND O.ORGANIZATION_ID=M.ORGANIZATION_ID 


--QUERY 15. WRITE A QUERY TO FETCH GROUP_NAME , MEMBER_NAME,DATE_JOINED WHO ARE BELONGS TO SAME GROUP.

SELECT G.GROUP_ID,G.GROUP_NAME,M.MEMBER_ID,M1.MEMBER_NAME,M.DATE_JOINED 
FROM GROUPS G INNER JOIN MEMBERS_GROUPS M ON G.GROUP_ID=M.GROUP_ID
INNER JOIN MEMBERS M1 ON G.CREATED_BY_MEMBER_ID=M1.MEMBER_ID
WHERE G.GROUP_NAME='VSPORTS';


--QUERY 16. WRITE A QUERY TO FETCH GROUP_NAME, MEMBER_NAME,DATE_JOINED WHO ARE BELONGS TO VSPORTS AND 			  	  			    
--AVENGERS GROUP USING IN OPERATOR.

SELECT G.GROUP_ID,G.GROUP_NAME,M.MEMBER_ID,M.DATE_JOINED
FROM GROUPS G INNER JOIN MEMBERS_GROUPS M ON G.GROUP_ID=M.GROUP_ID
WHERE G.GROUP_NAME IN('VSPORTS','AVENGERS');



--QUERY 17. WRITE A QUERY TO DISPALY MEMBER_ID, MEMBER_NAME,MARTIAL_STATUS AND CONNECTION_MEM_ID TO SEE HOW MANY 				 
--CONNECTIONS A MEMBER HAVE, NAMES IN DESCENDING ORDER.

SELECT M.MEMBER_NAME,M.MEMBER_ID,M.MARTIAL_STATUS,C.CONNECTION_MEM_ID
FROM MEMBERS M,CONNECTIONS C
WHERE M.MEMBER_ID=C.MEMBER_ID
ORDER BY (MEMBER_NAME)DESC;



--QUERY 18. WRITE A QUERY TO DISPLAY CONNECTION_ID, MEMBER_ID AND TO OBSERVE THE DATE OF WHEN CONNECTION HAS MADE

SELECT C.CONNECTION_ID,M.MEMBER_ID,C.DATE_CONNECTION_MADE
FROM CONNECTIONS C,MEMBERS M WHERE C.MEMBER_ID=M.MEMBER_ID;


--QUERY 19. WRITE A QUERY TO FIND HOW MANY POSTS ARE POSTED IN EACH POST_NAME USING GROUP BY AND HAVING CLUASE.

SELECT COUNT(DATE_POSTED) AS NO_OF_POSTS ,POST_NAME
FROM POSTS GROUP BY POST_NAME HAVING COUNT(DATE_POSTED)>=1 ORDER BY NO_OF_POSTS ASC;



--QUERY 20. WRITE A QUERY TO FIND HOW MANY POSTS ARE POSTED ON THE PARTICULAR DATE USING GROUP BY CLUASE.

SELECT COUNT(DATE_POSTED) AS NO_OF_POSTS ,POST_NAME,DATE_POSTED
FROM POSTS GROUP BY POST_NAME,DATE_POSTED;


--QUERY 21. WRITE A QUERY TO DISPLAY FIRST FIVE RECORDS USING TOP KEYWORD.

SELECT TOP 5 MEMBER_ID,MEMBER_NAME,MEM_ADDRESS,GENDER FROM MEMBERS;


--QUERY 22. WRITE A QUERY TO FETCH MAX NO OF POSTS POSTED USING SAME POST NAME.

SELECT COUNT(DATE_POSTED) AS NO_OF_POSTS ,POST_NAME,DATE_POSTED
FROM POSTS GROUP BY POST_NAME,DATE_POSTED 
HAVING DATE_POSTED='2014-JAN-19 07:24:24.000' AND POST_NAME='GOOD MORNING';


--QUERY 23. WRITE A QUERY TO FETCH MEM_NAME, MEM_ADDS, ORG_NAME OF A MEMBER WHO HAVE POSTED A POST BEFORE 2014.

SELECT P.POST_NAME,M.MEMBER_NAME,M.MEM_ADDRESS,O.ORGANIZATION_NAME,P.DATE_POSTED  
FROM POSTS P INNER JOIN MEMBERS M ON P.POST_MEMBER_ID=M.MEMBER_ID
INNER JOIN ORGANIZATION O ON O.ORGANIZATION_ID=M.ORGANIZATION_ID;

SELECT P.POST_NAME,M.MEMBER_NAME,M.MEM_ADDRESS,O.ORGANIZATION_NAME,P.DATE_POSTED  
FROM POSTS P INNER JOIN MEMBERS M ON P.POST_MEMBER_ID=M.MEMBER_ID
INNER JOIN ORGANIZATION O ON O.ORGANIZATION_ID=M.ORGANIZATION_ID 
WHERE P.DATE_POSTED<'2014-JAN-09 07:24:24.000';



--QUERY 24. WRITE A QUERY TO DISPALY POST_NAME, MEMBER_ID OF MEMBERS WHO HAVE POSTED MORE THAN ONE POST.

SELECT COUNT(POST_MEMBER_ID) AS NO_OF_POSTS,POST_NAME ,POST_MEMBER_ID
FROM POSTS P
GROUP BY POST_MEMBER_ID,POST_NAME HAVING COUNT(POST_MEMBER_ID)>1;


--QUERY 25. WRITE A QUERY TO SELECT ALL MEMBERS WHO ARE FROM SAME PLACE USING SELF JOIN.

SELECT A.MEMBER_ID AS MEMBER1,B.MEMBER_ID  MEMBER2,A.MEM_ADDRESS
FROM MEMBERS A,MEMBERS B WHERE A.MEM_ADDRESS=B.MEM_ADDRESS AND A.MEMBER_ID!=B.MEMBER_ID ORDER BY A.MEM_ADDRESS;


--QUERY 26. WRITE A QUERY TO DISPLAY WHO HAVE PROFILES IN LINKEDIN HAVING JAVA-SQL AND UI-SQL SKILLS.

SELECT M.MEMBER_NAME,P.PROFILE_ID,P.SKILLS,P.DATE_CREATED
FROM MEMBERS M,MEMBER_PROFILE P WHERE M.MEMBER_ID=P.PROFILE_MEMBER_ID AND SKILLS IN('JAVA & SQL','UI & SQL');


--QUERY 27. WRITE A QUERY TO RETRIEVE DETAILS OF A PERSON WHO KNOWS ENGLISH AND KANNADA LANGUAGES.

SELECT M.MEMBER_ID,M.MEMBER_NAME,P.SKILLS,P.LANGUAGES,P.DATE_LAST_UPDATED
FROM MEMBERS M,MEMBER_PROFILE P WHERE M.MEMBER_ID=P.PROFILE_MEMBER_ID AND LANGUAGES='ENGLISH & KANNADA';


--QUERY 28. WRITE A QUERY TO DISPLAY PROFILE_ID, MEMBER_NAME, EMAIL AND WHEN PROFILE LAST UPDATED DATE AND TIME.

SELECT P.PROFILE_ID,M.MEMBER_NAME,M.EMAIL,P.DATE_LAST_UPDATED
FROM MEMBER_PROFILE P,MEMBERS M WHERE P.PROFILE_MEMBER_ID=M.MEMBER_ID ;


--QUERY 29. WRITE A QUERY TO DISPLAY WHO JOINED ON SAME DATE TO THE GROUP USING DISTINCT KEYWORD.

SELECT  DISTINCT A.MEMBER_ID,A.DATE_JOINED AS DATE1
FROM MEMBERS_GROUPS A,MEMBERS_GROUPS B WHERE A.DATE_JOINED=B.DATE_JOINED AND A.MEMBER_ID!=B.MEMBER_ID;


--QUERY 30. WRITE A QUERY TO DISPLAY MEMBER DETAILS WHO ARE WORKING FOR MINDTREE.

SELECT O.ORGANIZATION_NAME,O.ORGANIZATION_ADRS,M.MEMBER_ID,M.MEMBER_NAME
FROM MEMBERS M,ORGANIZATION O WHERE M.ORGANIZATION_ID=O.ORGANIZATION_ID AND O.ORGANIZATION_NAME='MINDTREE';


--QUERY 31. WRITE A QUERY TO DISPLAY GROUP DETAILS WHERE GROUP_DESCRIPTION HAVING TWO CONSECUTIVE E’S.

SELECT * FROM GROUPS WHERE GROUP_DESCRIPTION LIKE '%EE%';




SELECT * FROM GROUPS;
SELECT * FROM MEMBERS_GROUPS;





SELECT * FROM POSTS;
SELECT * FROM ORGANIZATION;
SELECT * FROM MEMBERS_GROUPS;
SELECT * FROM CONNECTIONS;
SELECT * FROM POSTS;




